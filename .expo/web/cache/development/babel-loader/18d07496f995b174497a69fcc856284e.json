{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/abe/Desktop/rn/Recipe React Native/components/Results.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RecipeCard from \"./RecipeCard\";\n\nfunction Results(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var food = route.params.food;\n  var appID = \"636fda1d\";\n  var apiKey = \"12a8a1f925c236c992926c9ef4955e39\";\n  var url = \"https://api.edamam.com/search?q=\" + food + \"&app_id=\" + appID + \"&app_key=\" + apiKey;\n  useEffect(function () {\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setData(data.hits);\n    }).catch(function (e) {\n      return console.log(e);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"green\",\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }) : data.map(function (stuff) {\n    return React.createElement(RecipeCard, {\n      title: stuff.recipe.label,\n      url: stuff.recipe.image,\n      lots: stuff.recipe.ingredientLines,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default Results;","map":{"version":3,"sources":["/Users/abe/Desktop/rn/Recipe React Native/components/Results.jsx"],"names":["React","useState","useEffect","RecipeCard","Results","route","navigation","data","setData","loading","setLoading","food","params","appID","apiKey","url","fetch","then","res","json","hits","catch","e","console","log","finally","flex","justifyContent","alignContent","map","stuff","recipe","label","image","ingredientLines"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,OAAOC,UAAP;;AAEA,SAASC,OAAT,OAAwC;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACdL,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,MAC/BM,IAD+B;AAAA,MACzBC,OADyB;;AAAA,mBAERP,QAAQ,CAAC,IAAD,CAFA;AAAA;AAAA,MAE/BQ,OAF+B;AAAA,MAEtBC,UAFsB;;AAItC,MAAMC,IAAI,GAAGN,KAAK,CAACO,MAAN,CAAaD,IAA1B;AACA,MAAME,KAAK,GAAG,UAAd;AACA,MAAMC,MAAM,GAAG,kCAAf;AACA,MAAMC,GAAG,wCAAsCJ,IAAtC,gBAAqDE,KAArD,iBAAsEC,MAA/E;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACV,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAI,CAACa,IAAN,CAAjB;AAAA,KAFR,EAGGC,KAHH,CAGS,UAACC,CAAD;AAAA,aAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,KAHT,EAIGG,OAJH,CAIW;AAAA,aAAMf,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJX;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgB,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,OAAO,GACN,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE,QAA3B;AAAqCC,MAAAA,YAAY,EAAE;AAAnD,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAONrB,IAAI,CAACsB,GAAL,CAAS,UAACC,KAAD;AAAA,WACP,oBAAC,UAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC,KADtB;AAEE,MAAA,GAAG,EAAEF,KAAK,CAACC,MAAN,CAAaE,KAFpB;AAGE,MAAA,IAAI,EAAEH,KAAK,CAACC,MAAN,CAAaG,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO;AAAA,GAAT,CARJ,CADF;AAmBD;;AAED,eAAe9B,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport RecipeCard from \"./RecipeCard\";\n\nfunction Results({ route, navigation }) {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const food = route.params.food;\n  const appID = \"636fda1d\";\n  const apiKey = \"12a8a1f925c236c992926c9ef4955e39\";\n  const url = `https://api.edamam.com/search?q=${food}&app_id=${appID}&app_key=${apiKey}`;\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => setData(data.hits))\n      .catch((e) => console.log(e))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      {loading ? (\n        <ActivityIndicator\n          size=\"large\"\n          color=\"green\"\n          style={{ flex: 1, justifyContent: \"center\", alignContent: \"center\" }}\n        />\n      ) : (\n        data.map((stuff) => (\n          <RecipeCard\n            title={stuff.recipe.label}\n            url={stuff.recipe.image}\n            lots={stuff.recipe.ingredientLines}\n          />\n        ))\n      )}\n    </View>\n  );\n}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}